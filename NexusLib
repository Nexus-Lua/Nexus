-- NexusLib.lua
local NexusLib = {Windows = {}, Elements = {}, Themes = {}, Flags = {}, Connections = {}}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

--===============================================================================================================--
-- [THEME CONFIGURATION]
--===============================================================================================================--

NexusLib.Themes = {
    Dark = {
        Primary = Color3.fromRGB(15, 15, 15),
        Secondary = Color3.fromRGB(25, 25, 25),
        Accent = Color3.fromRGB(45, 45, 45),
        Text = Color3.fromRGB(240, 240, 240),
        Error = Color3.fromRGB(255, 85, 85),
        Success = Color3.fromRGB(85, 255, 85)
    },
    Light = {
        Primary = Color3.fromRGB(245, 245, 245),
        Secondary = Color3.fromRGB(225, 225, 225),
        Accent = Color3.fromRGB(200, 200, 200),
        Text = Color3.fromRGB(30, 30, 30),
        Error = Color3.fromRGB(255, 100, 100),
        Success = Color3.fromRGB(100, 255, 100)
    }
}

local ANIMATION_SETTINGS = {
    FadeIn = 0.25,
    FadeOut = 0.2,
    HoverIntensity = 0.1,
    ClickScale = 0.95,
    RippleDuration = 0.5,
    Elastic = Enum.EasingStyle.Elastic,
    Spring = Enum.EasingStyle.Bounce
}

--===============================================================================================================--
-- [UTILITY FUNCTIONS]
--===============================================================================================================--

local function Create(className, properties)
    local instance = Instance.new(className)
    for prop, value in pairs(properties) do
        if prop == "Parent" then continue end
        pcall(function() instance[prop] = value end)
    end
    return instance
end

local function AddRippleEffect(button)
    button.ClipsDescendants = true
    local function CreateRipple(x, y)
        local ripple = Create("Frame", {
            Size = UDim2.new(0, 0, 0, 0),
            Position = UDim2.new(0, x - button.AbsolutePosition.X, 0, y - button.AbsolutePosition.Y),
            BackgroundColor3 = NexusLib.Themes.Dark.Accent,
            BackgroundTransparency = 0.7,
            Parent = button,
            ZIndex = -1
        })
        
        Create("UICorner", {CornerRadius = UDim.new(1, 0), Parent = ripple})
        
        TweenService:Create(ripple, TweenInfo.new(ANIMATION_SETTINGS.RippleDuration, Enum.EasingStyle.Quad), {
            Size = UDim2.new(2, 0, 2, 0),
            Position = UDim2.new(-0.5, x - button.AbsolutePosition.X, -0.5, y - button.AbsolutePosition.Y),
            BackgroundTransparency = 1
        }):Play()
        
        game.Debris:AddItem(ripple, ANIMATION_SETTINGS.RippleDuration)
    end
    
    button.MouseButton1Down:Connect(function(x, y)
        CreateRipple(x, y)
    end)
end

local function Draggable(frame, handle)
    local dragging, dragInput, dragStart, startPos
    
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(
                startPos.X.Scale, 
                startPos.X.Offset + delta.X,
                startPos.Y.Scale, 
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end

--===============================================================================================================--
-- [WINDOW SYSTEM]
--===============================================================================================================--

function NexusLib:Window(title, config)
    local window = {Tabs = {}, Notifications = {}, Elements = {}}
    config = config or {}
    
    -- Main Container
    window.Main = Create("ScreenGui", {
        Name = "NexusLibWindow_"..title,
        Parent = config.Parent or game.CoreGui,
        ResetOnSpawn = false,
        ZIndexBehavior = Enum.ZIndexBehavior.Global
    })
    
    -- Main Frame
    local mainFrame = Create("Frame", {
        Size = UDim2.new(0, 500, 0, 400),
        Position = UDim2.new(0.5, -250, 0.5, -200),
        BackgroundColor3 = NexusLib.Themes.Dark.Primary,
        Parent = window.Main,
        ClipsDescendants = true
    })
    
    Create("UICorner", {CornerRadius = UDim.new(0, 8), Parent = mainFrame})
    Create("UIStroke", {Color = NexusLib.Themes.Dark.Secondary, Thickness = 2, Parent = mainFrame})
    
    -- Title Bar
    local titleBar = Create("Frame", {
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundColor3 = NexusLib.Themes.Dark.Secondary,
        Parent = mainFrame
    })
    
    Create("UICorner", {CornerRadius = UDim.new(0, 8), Parent = titleBar})
    Create("UIStroke", {Color = NexusLib.Themes.Dark.Accent, Thickness = 1, Parent = titleBar})
    
    -- Title Label
    local titleLabel = Create("TextLabel", {
        Text = title,
        Font = Enum.Font.GothamBold,
        TextSize = 14,
        TextColor3 = NexusLib.Themes.Dark.Text,
        Size = UDim2.new(1, -60, 1, 0),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundTransparency = 1,
        Parent = titleBar
    })
    
    -- Close Button
    local closeButton = Create("TextButton", {
        Size = UDim2.new(0, 20, 0, 20),
        Position = UDim2.new(1, -25, 0.5, -10),
        BackgroundColor3 = NexusLib.Themes.Dark.Error,
        Text = "",
        Parent = titleBar
    })
    
    Create("UICorner", {CornerRadius = UDim.new(1, 0), Parent = closeButton})
    AddRippleEffect(closeButton)
    
    closeButton.MouseButton1Click:Connect(function()
        TweenService:Create(mainFrame, TweenInfo.new(ANIMATION_SETTINGS.FadeOut, Enum.EasingStyle.Quad), {
            Size = UDim2.new(0, 0, 0, 0),
            Position = UDim2.new(0.5, 0, 0.5, 0)
        }):Play()
        task.wait(ANIMATION_SETTINGS.FadeOut)
        window.Main:Destroy()
    end)
    
    -- Minimize Button
    local minimizeButton = Create("TextButton", {
        Size = UDim2.new(0, 20, 0, 20),
        Position = UDim2.new(1, -50, 0.5, -10),
        BackgroundColor3 = NexusLib.Themes.Dark.Accent,
        Text = "",
        Parent = titleBar
    })
    
    Create("UICorner", {CornerRadius = UDim.new(1, 0), Parent = minimizeButton})
    AddRippleEffect(minimizeButton)
    
    minimizeButton.MouseButton1Click:Connect(function()
        mainFrame.Visible = not mainFrame.Visible
    end)
    
    -- Tabs Container
    local tabContainer = Create("ScrollingFrame", {
        Size = UDim2.new(1, -20, 1, -40),
        Position = UDim2.new(0, 10, 0, 35),
        BackgroundTransparency = 1,
        ScrollBarThickness = 4,
        ScrollBarImageColor3 = NexusLib.Themes.Dark.Accent,
        Parent = mainFrame
    })
    
    Create("UIListLayout", {
        Padding = UDim.new(0, 5),
        SortOrder = Enum.SortOrder.LayoutOrder,
        Parent = tabContainer
    })
    
    -- Notification System
    local notificationHolder = Create("Frame", {
        Size = UDim2.new(0.3, 0, 1, -10),
        Position = UDim2.new(1, -10, 0, 5),
        AnchorPoint = Vector2.new(1, 0),
        BackgroundTransparency = 1,
        Parent = window.Main
    })
    
    Create("UIListLayout", {
        VerticalAlignment = Enum.VerticalAlignment.Bottom,
        HorizontalAlignment = Enum.HorizontalAlignment.Right,
        Padding = UDim.new(0, 5),
        Parent = notificationHolder
    })
    
    -- Dragging System
    Draggable(mainFrame, titleBar)
    
    -- Window Methods
    function window:Notification(config)
        local notifFrame = Create("Frame", {
            Size = UDim2.new(1, 0, 0, 60),
            BackgroundColor3 = NexusLib.Themes.Dark.Secondary,
            Parent = notificationHolder,
            LayoutOrder = #notificationHolder:GetChildren()
        })
        
        Create("UICorner", {CornerRadius = UDim.new(0, 6), Parent = notifFrame})
        Create("UIStroke", {Color = NexusLib.Themes.Dark.Accent, Parent = notifFrame})
        
        -- Notification Content
        local titleLabel = Create("TextLabel", {
            Text = config.Title or "Notification",
            Font = Enum.Font.GothamBold,
            TextSize = 14,
            TextColor3 = NexusLib.Themes.Dark.Text,
            Position = UDim2.new(0, 10, 0, 5),
            Size = UDim2.new(1, -20, 0, 20),
            BackgroundTransparency = 1,
            Parent = notifFrame
        })
        
        local contentLabel = Create("TextLabel", {
            Text = config.Content or "Sample Content",
            Font = Enum.Font.Gotham,
            TextSize = 12,
            TextColor3 = NexusLib.Themes.Dark.Text,
            Position = UDim2.new(0, 10, 0, 25),
            Size = UDim2.new(1, -20, 1, -30),
            TextWrapped = true,
            BackgroundTransparency = 1,
            Parent = notifFrame
        })
        
        -- Animation Sequence
        notifFrame.Position = UDim2.new(1, 0, 1, 0)
        TweenService:Create(notifFrame, TweenInfo.new(ANIMATION_SETTINGS.FadeIn, Enum.EasingStyle.Quad), {
            Position = UDim2.new(0, 0, 1, -65)
        }):Play()
        
        task.wait(config.Duration or 5)
        
        TweenService:Create(notifFrame, TweenInfo.new(ANIMATION_SETTINGS.FadeOut, Enum.EasingStyle.Quad), {
            Position = UDim2.new(1, 0, 1, 0)
        }):Play()
        task.wait(ANIMATION_SETTINGS.FadeOut)
        notifFrame:Destroy()
    end
    
    function window:Tab(name)
        local tab = {Buttons = {}, Sections = {}}
        
        -- Tab Button
        local tabButton = Create("TextButton", {
            Text = name,
            Size = UDim2.new(1, -10, 0, 30),
            BackgroundColor3 = NexusLib.Themes.Dark.Secondary,
            TextColor3 = NexusLib.Themes.Dark.Text,
            Font = Enum.Font.GothamSemibold,
            Parent = tabContainer
        })
        
        Create("UICorner", {CornerRadius = UDim.new(0, 5), Parent = tabButton})
        AddRippleEffect(tabButton)
        
        -- Tab Content
        local contentFrame = Create("ScrollingFrame", {
            Size = UDim2.new(1, -20, 1, -40),
            Position = UDim2.new(0, 10, 0, 35),
            BackgroundTransparency = 1,
            ScrollBarThickness = 4,
            Visible = false,
            Parent = mainFrame
        })
        
        Create("UIListLayout", {
            Padding = UDim.new(0, 10),
            Parent = contentFrame
        })
        
        -- Tab Activation
        tabButton.MouseButton1Click:Connect(function()
            for _, v in pairs(mainFrame:GetChildren()) do
                if v:IsA("ScrollingFrame") and v ~= tabContainer then
                    v.Visible = false
                end
            end
            contentFrame.Visible = true
        end)
        
        -- Section System
        function tab:Section(name)
            local section = {}
            
            local sectionFrame = Create("Frame", {
                Size = UDim2.new(1, 0, 0, 30),
                BackgroundColor3 = NexusLib.Themes.Dark.Secondary,
                Parent = contentFrame
            })
            
            Create("UICorner", {CornerRadius = UDim.new(0, 5), Parent = sectionFrame})
            Create("UIStroke", {Color = NexusLib.Themes.Dark.Accent, Parent = sectionFrame})
            
            -- Section Content
            local sectionLabel = Create("TextLabel", {
                Text = name,
                Font = Enum.Font.GothamBold,
                TextSize = 13,
                TextColor3 = NexusLib.Themes.Dark.Text,
                Size = UDim2.new(1, -10, 1, 0),
                Position = UDim2.new(0, 10, 0, 0),
                BackgroundTransparency = 1,
                Parent = sectionFrame
            })
            
            local contentContainer = Create("Frame", {
                Size = UDim2.new(1, -10, 0, 0),
                Position = UDim2.new(0, 5, 0, 25),
                BackgroundTransparency = 1,
                Parent = sectionFrame
            })
            
            Create("UIListLayout", {
                Padding = UDim.new(0, 5),
                Parent = contentContainer
            })
            
            -- Button Component
            function section:Button(text, callback)
                local button = Create("TextButton", {
                    Text = text,
                    Size = UDim2.new(1, 0, 0, 30),
                    BackgroundColor3 = NexusLib.Themes.Dark.Accent,
                    TextColor3 = NexusLib.Themes.Dark.Text,
                    Font = Enum.Font.Gotham,
                    Parent = contentContainer
                })
                
                Create("UICorner", {CornerRadius = UDim.new(0, 5), Parent = button})
                AddRippleEffect(button)
                
                -- Click Animation
                button.MouseButton1Click:Connect(function()
                    TweenService:Create(button, TweenInfo.new(0.1, Enum.EasingStyle.Back), {
                        Size = UDim2.new(0.95, 0, 0.95, 0)
                    }):Play()
                    task.wait(0.1)
                    TweenService:Create(button, TweenInfo.new(0.2, ANIMATION_SETTINGS.Elastic), {
                        Size = UDim2.new(1, 0, 1, 0)
                    }):Play()
                    callback()
                end)
                
                return button
            end
            
            return section
        end
        
        return tab
    end
    
    return window
end

return NexusLib
